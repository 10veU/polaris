name: Release

on:
  release:
    types: [published]

jobs:
  release:
    name: Release polaris
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2

      - name: Build
        id: build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          UPLOAD_URL: ${{ github.event.release.upload_url }}
        run: |
          bash build.sh
          echo ${UPLOAD_URL}
          PACKAGE_NAME=$(ls | grep polaris-server-release*.tar.gz | sed -n '1p')
          echo ::set-output name=name::${PACKAGE_NAME}
       
      - name: Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ steps.build.outputs.name }}
          asset_name: ${{ steps.build.outputs.name }}
          asset_content_type: application/gzip